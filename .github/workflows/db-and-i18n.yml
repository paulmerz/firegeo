name: DB migrations & i18n (minimal)

on:
  push:
    branches: [ dev, main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  preview:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    environment: preview
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Ensure pnpm store exists (for caching)
        run: mkdir -p "$(pnpm store path)"
      - run: corepack enable
      - run: pnpm install --no-frozen-lockfile
      - name: Lint
        run: pnpm lint
      # pgcrypto is ensured inside setup.js using node-postgres
      - name: Run migrations
        run: node setup.js
      - name: i18n check
        run: pnpm run i18n:check
      - name: Brand detection tests
        run: pnpm run test:brand-detection
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      - name: Trigger Vercel Deploy Hook
        if: ${{ success() }}
        run: curl -X POST "$VERCEL_DEPLOY_HOOK_URL"
        env:
          VERCEL_DEPLOY_HOOK_URL: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}

  production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Ensure pnpm store exists (for caching)
        run: mkdir -p "$(pnpm store path)"
      - run: corepack enable
      - run: pnpm install --no-frozen-lockfile
      - name: Lint
        run: pnpm lint
      # pgcrypto is ensured inside setup.js using node-postgres
      - name: Run migrations
        run: node setup.js
      - name: i18n check
        run: pnpm run i18n:check
      - name: Brand detection tests
        run: pnpm run test:brand-detection
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      - name: Trigger Vercel Deploy Hook
        if: ${{ success() }}
        run: curl -X POST "$VERCEL_DEPLOY_HOOK_URL"
        env:
          VERCEL_DEPLOY_HOOK_URL: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}


